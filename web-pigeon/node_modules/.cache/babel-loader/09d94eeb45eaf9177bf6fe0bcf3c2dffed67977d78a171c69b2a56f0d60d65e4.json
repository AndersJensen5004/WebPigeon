{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jense\\\\Desktop\\\\WebPigeon\\\\web-pigeon\\\\src\\\\components\\\\MessengerDetails\\\\MessengerDetails.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { joinMessenger, leaveMessenger, sendMessage } from '../../socketManager';\nimport { useAuth } from '../../contexts/AuthContext';\nimport config from '../../config';\nimport axios from 'axios';\nimport defaultProfilePicture from \"../../assets/images//default-profile.png\";\nimport \"./MessengerDetails.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessengerDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [messenger, setMessenger] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [showDescription, setShowDescription] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isReconnecting, setIsReconnecting] = useState(false);\n  const [connectedUsers, setConnectedUsers] = useState([]);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const navigate = useNavigate();\n  const {\n    currentUser: user,\n    socket\n  } = useAuth();\n  const messagesEndRef = useRef(null);\n  const MAX_CHARACTERS = 1000;\n  const fetchMessenger = useCallback(async () => {\n    try {\n      const response = await axios.get(`${config.apiBaseUrl}/messengers/${id}`);\n      setMessenger(response.data);\n      setMessages(response.data.messages || []);\n      setIsPending(false);\n    } catch (err) {\n      setError(err.message);\n      setIsPending(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchMessenger();\n  }, [fetchMessenger]);\n  const handleDeleteClick = () => {\n    setShowDeleteConfirm(true);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      await axios.delete(`${config.apiBaseUrl}/messengers/${id}`);\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleDeleteCancel = () => {\n    setShowDeleteConfirm(false);\n  };\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    if (socket) {\n      setIsConnected(socket.connected);\n      socket.on('connect', () => {\n        console.log('Socket connected');\n        setIsConnected(true);\n        setIsReconnecting(false);\n        joinMessenger(id);\n      });\n      socket.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setIsConnected(false);\n      });\n      socket.on('reconnecting', () => {\n        console.log('Socket reconnecting');\n        setIsReconnecting(true);\n      });\n      socket.on('reconnect', () => {\n        console.log('Socket reconnected');\n        setIsConnected(true);\n        setIsReconnecting(false);\n        joinMessenger(id);\n      });\n      socket.on('message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n      socket.on('user_joined', data => {\n        console.log('User joined:', data.username);\n        //notification or update the UI here\n      });\n      socket.on('user_left', data => {\n        console.log('User left:', data.username);\n        //notification or update the UI here\n      });\n      socket.on('connected_users', data => {\n        console.log('Connected users:', data.users);\n        setConnectedUsers(data.users);\n      });\n      if (socket.connected) {\n        joinMessenger(id);\n      }\n    }\n    return () => {\n      if (socket) {\n        leaveMessenger(id);\n        socket.off('connect');\n        socket.off('disconnect');\n        socket.off('reconnecting');\n        socket.off('reconnect');\n        socket.off('message');\n        socket.off('user_joined');\n        socket.off('user_left');\n        socket.off('connected_users');\n      }\n    };\n  }, [id, user, socket, navigate]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleAddMessage = e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be logged in to send a message');\n      return;\n    }\n    if (newMessage.length > MAX_CHARACTERS) {\n      setError(`Message exceeds ${MAX_CHARACTERS} character limit`);\n      return;\n    }\n    setIsSending(true);\n    sendMessage(id, newMessage);\n    setNewMessage('');\n    setIsSending(false);\n  };\n  const toggleDescription = () => {\n    setShowDescription(!showDescription);\n  };\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  const toggleFullScreen = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n  const groupMessages = useCallback(messages => {\n    return messages.reduce((acc, message, index, array) => {\n      if (index === 0 || message.username !== array[index - 1].username) {\n        acc.push({\n          username: message.username,\n          profilePhoto: message.profile_photo,\n          messages: [{\n            content: message.content,\n            timestamp: message.timestamp\n          }]\n        });\n      } else {\n        acc[acc.length - 1].messages.push({\n          content: message.content,\n          timestamp: message.timestamp\n        });\n      }\n      return acc;\n    }, []);\n  }, []);\n  const formatTimestamp = useCallback(timestamp => {\n    const messageDate = new Date(timestamp);\n    const today = new Date();\n    const isToday = messageDate.toDateString() === today.toDateString();\n    if (isToday) {\n      return messageDate.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return messageDate.toLocaleString([], {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }, []);\n  const highlightMentions = useCallback(content => {\n    if (!user) return content;\n    const regex = new RegExp(`@${user.username}\\\\b`, 'gi');\n    return content.split(' ').map((word, index) => regex.test(word) ? `<span class=\"mention\" key=${index}>${word}</span>` : word).join(' ');\n  }, [user]);\n  const checkForMention = useCallback(content => {\n    if (!user) return false;\n    const regex = new RegExp(`@${user.username}\\\\b`, 'gi');\n    return regex.test(content);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `messenger-details terminal-interface ${isFullScreen ? 'full-screen' : ''}`,\n    children: [!user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view this messenger.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 23\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(!isConnected || isReconnecting) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disconnected-message\",\n        children: \"You are currently disconnected. Reconnecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 32\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 28\n      }, this), messenger && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terminal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: messenger.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Creator: \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/profile/${messenger.creator_username}`,\n                children: messenger.creator_username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleDescription,\n              className: \"description-toggle\",\n              children: showDescription ? \"Hide Description\" : \"Show Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleFullScreen,\n              className: \"fullscreen-btn\",\n              children: isFullScreen ? \"Exit Full Screen\" : \"Full Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), user && user.id === messenger.creator_id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteClick,\n              className: \"delete-btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), showDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messenger.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terminal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connected-users\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Connected Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: connectedUsers.map((username, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: username\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: [messenger && messages && groupMessages(messages).map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: group.profilePhoto || defaultProfilePicture,\n                  alt: `${group.username}'s profile`,\n                  className: \"profile-pic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-header\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/profile/${group.username}`,\n                      className: \"username\",\n                      children: group.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 39\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 37\n                  }, this), group.messages.map((message, messageIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `message ${checkForMention(message.content) ? 'mention' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"message-text\",\n                      children: message.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"timestamp\",\n                      children: formatTimestamp(message.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 41\n                    }, this)]\n                  }, messageIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 39\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 35\n                }, this)]\n              }, groupIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terminal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddMessage,\n            className: \"message-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"prompt\",\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              maxLength: MAX_CHARACTERS,\n              disabled: isSending || !isConnected,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSending || !isConnected,\n              children: isSending ? 'Sending...' : 'SEND'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-count\",\n            children: [newMessage.length, \"/\", MAX_CHARACTERS]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), showDeleteConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirm-delete\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this messenger?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteConfirm,\n          children: \"Yes, delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s(MessengerDetails, \"5agLD8kVVwHTuhyRTxrltz2ZiiQ=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = MessengerDetails;\nexport default MessengerDetails;\nvar _c;\n$RefreshReg$(_c, \"MessengerDetails\");","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useNavigate","useParams","Link","joinMessenger","leaveMessenger","sendMessage","useAuth","config","axios","defaultProfilePicture","jsxDEV","_jsxDEV","Fragment","_Fragment","MessengerDetails","_s","id","messenger","setMessenger","newMessage","setNewMessage","messages","setMessages","error","setError","isPending","setIsPending","isSending","setIsSending","showDeleteConfirm","setShowDeleteConfirm","showDescription","setShowDescription","isConnected","setIsConnected","isReconnecting","setIsReconnecting","connectedUsers","setConnectedUsers","isFullScreen","setIsFullScreen","navigate","currentUser","user","socket","messagesEndRef","MAX_CHARACTERS","fetchMessenger","response","get","apiBaseUrl","data","err","message","handleDeleteClick","handleDeleteConfirm","delete","handleDeleteCancel","connected","on","console","log","prevMessages","username","users","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleAddMessage","e","preventDefault","length","toggleDescription","handleFullScreenChange","document","fullscreenElement","addEventListener","removeEventListener","toggleFullScreen","groupMessages","reduce","acc","index","array","push","profilePhoto","profile_photo","content","timestamp","formatTimestamp","messageDate","Date","today","isToday","toDateString","toLocaleTimeString","hour","minute","toLocaleString","year","month","day","highlightMentions","regex","RegExp","split","map","word","test","join","checkForMention","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","to","creator_username","onClick","creator_id","description","group","groupIndex","src","alt","messageIndex","ref","onSubmit","type","value","onChange","target","placeholder","maxLength","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/jense/Desktop/WebPigeon/web-pigeon/src/components/MessengerDetails/MessengerDetails.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { joinMessenger, leaveMessenger, sendMessage } from '../../socketManager';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport defaultProfilePicture from \"../../assets/images//default-profile.png\";\r\nimport \"./MessengerDetails.css\";\r\n\r\nconst MessengerDetails = () => {\r\n\r\n    const { id } = useParams();\r\n    const [messenger, setMessenger] = useState(null);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [isSending, setIsSending] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [showDescription, setShowDescription] = useState(false);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isReconnecting, setIsReconnecting] = useState(false);\r\n    const [connectedUsers, setConnectedUsers] = useState([]);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const { currentUser: user, socket } = useAuth();\r\n\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n\r\n    const MAX_CHARACTERS = 1000;\r\n\r\n    const fetchMessenger = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${config.apiBaseUrl}/messengers/${id}`);\r\n            setMessenger(response.data);\r\n            setMessages(response.data.messages || []);\r\n            setIsPending(false);\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsPending(false);\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        fetchMessenger();\r\n    }, [fetchMessenger]);\r\n\r\n    const handleDeleteClick = () => {\r\n        setShowDeleteConfirm(true);\r\n    };\r\n\r\n    const handleDeleteConfirm = async () => {\r\n        try {\r\n            await axios.delete(`${config.apiBaseUrl}/messengers/${id}`);\r\n            navigate('/');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleDeleteCancel = () => {\r\n        setShowDeleteConfirm(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        if (socket) {\r\n            setIsConnected(socket.connected);\r\n\r\n            socket.on('connect', () => {\r\n                console.log('Socket connected');\r\n                setIsConnected(true);\r\n                setIsReconnecting(false);\r\n                joinMessenger(id);\r\n            });\r\n            \r\n            socket.on('disconnect', () => {\r\n                console.log('Socket disconnected');\r\n                setIsConnected(false);\r\n            });\r\n            \r\n            socket.on('reconnecting', () => {\r\n                console.log('Socket reconnecting');\r\n                setIsReconnecting(true);\r\n            });\r\n            \r\n            socket.on('reconnect', () => {\r\n                console.log('Socket reconnected');\r\n                setIsConnected(true);\r\n                setIsReconnecting(false);\r\n                joinMessenger(id);\r\n            });\r\n\r\n            socket.on('message', (message) => {\r\n                setMessages(prevMessages => [...prevMessages, message]);\r\n            });\r\n\r\n            socket.on('user_joined', (data) => {\r\n                console.log('User joined:', data.username);\r\n                //notification or update the UI here\r\n            });\r\n\r\n            socket.on('user_left', (data) => {\r\n                console.log('User left:', data.username);\r\n                //notification or update the UI here\r\n            });\r\n\r\n            socket.on('connected_users', (data) => {\r\n                console.log('Connected users:', data.users);\r\n                setConnectedUsers(data.users);\r\n            });\r\n\r\n            if (socket.connected) {\r\n                joinMessenger(id);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (socket) {\r\n                leaveMessenger(id);\r\n                socket.off('connect');\r\n                socket.off('disconnect');\r\n                socket.off('reconnecting');\r\n                socket.off('reconnect');\r\n                socket.off('message');\r\n                socket.off('user_joined');\r\n                socket.off('user_left');\r\n                socket.off('connected_users');\r\n            }\r\n        };\r\n    }, [id, user, socket, navigate]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n\r\n    const handleAddMessage = (e) => {\r\n        e.preventDefault();\r\n        if (!user) {\r\n          setError('You must be logged in to send a message');\r\n          return;\r\n        }\r\n        if (newMessage.length > MAX_CHARACTERS) {\r\n          setError(`Message exceeds ${MAX_CHARACTERS} character limit`);\r\n          return;\r\n        }\r\n        setIsSending(true);\r\n        sendMessage(id, newMessage);\r\n        setNewMessage('');\r\n        setIsSending(false);\r\n    };\r\n\r\n    const toggleDescription = () => {\r\n        setShowDescription(!showDescription);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleFullScreenChange = () => {\r\n          setIsFullScreen(!!document.fullscreenElement);\r\n        };\r\n      \r\n        document.addEventListener('fullscreenchange', handleFullScreenChange);\r\n      \r\n        return () => {\r\n          document.removeEventListener('fullscreenchange', handleFullScreenChange);\r\n        };\r\n      }, []);\r\n\r\n      const toggleFullScreen = () => {\r\n        setIsFullScreen(!isFullScreen);\r\n      };\r\n\r\n      const groupMessages = useCallback((messages) => {\r\n        return messages.reduce((acc, message, index, array) => {\r\n          if (index === 0 || message.username !== array[index - 1].username) {\r\n            acc.push({\r\n              username: message.username,\r\n              profilePhoto: message.profile_photo,\r\n              messages: [{content: message.content, timestamp: message.timestamp}]\r\n            });\r\n          } else {\r\n            acc[acc.length - 1].messages.push({content: message.content, timestamp: message.timestamp});\r\n          }\r\n          return acc;\r\n        }, []);\r\n      }, []);\r\n    \r\n      const formatTimestamp = useCallback((timestamp) => {\r\n        const messageDate = new Date(timestamp);\r\n        const today = new Date();\r\n        const isToday = messageDate.toDateString() === today.toDateString();\r\n        \r\n        if (isToday) {\r\n          return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        } else {\r\n          return messageDate.toLocaleString([], { \r\n            year: 'numeric', \r\n            month: 'short', \r\n            day: 'numeric', \r\n            hour: '2-digit', \r\n            minute: '2-digit' \r\n          });\r\n        }\r\n      }, []);\r\n    \r\n      const highlightMentions = useCallback((content) => {\r\n        if (!user) return content;\r\n        const regex = new RegExp(`@${user.username}\\\\b`, 'gi');\r\n        return content.split(' ').map((word, index) => \r\n          regex.test(word) \r\n            ? `<span class=\"mention\" key=${index}>${word}</span>` \r\n            : word\r\n        ).join(' ');\r\n      }, [user]);\r\n\r\n      const checkForMention = useCallback((content) => {\r\n        if (!user) return false;\r\n        const regex = new RegExp(`@${user.username}\\\\b`, 'gi');\r\n        return regex.test(content);\r\n      }, [user]);\r\n\r\n    return ( \r\n        <div className={`messenger-details terminal-interface ${isFullScreen ? 'full-screen' : ''}`}>\r\n            {!user && <div>Please log in to view this messenger.</div>}\r\n            {user && (\r\n                <>\r\n                {(!isConnected || isReconnecting)&& (\r\n                    <div className=\"disconnected-message\">\r\n                        You are currently disconnected. Reconnecting...\r\n                    </div>\r\n                )}\r\n                { isPending && <div className=\"loading\">Loading...</div> }\r\n                { error && <div className=\"error\">{ error }</div> }\r\n                { messenger && (\r\n                    <>\r\n                        <div className=\"terminal-header\">\r\n                          <div>\r\n                            <h2>{messenger.title}</h2>\r\n                            <p>Creator: <Link to={`/profile/${messenger.creator_username}`}>{messenger.creator_username}</Link></p>\r\n                          </div>\r\n                          <div className=\"header-buttons\">\r\n                            <button onClick={toggleDescription} className=\"description-toggle\">\r\n                              {showDescription ? \"Hide Description\" : \"Show Description\"}\r\n                            </button>\r\n                            <button onClick={toggleFullScreen} className=\"fullscreen-btn\">\r\n                              {isFullScreen ? \"Exit Full Screen\" : \"Full Screen\"}\r\n                            </button>\r\n                            {user && user.id === messenger.creator_id && (\r\n                              <button onClick={handleDeleteClick} className=\"delete-btn\">Delete</button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        {showDescription && (\r\n                                    <div className=\"description\">\r\n                                        <p>{messenger.description}</p>\r\n                                    </div>\r\n                                )}\r\n                        <div className=\"terminal-body\">\r\n                          <div className=\"sidebar\">\r\n                            <div className=\"connected-users\">\r\n                              <h3>Connected Users</h3>\r\n                              <ul>\r\n                                {connectedUsers.map((username, index) => (\r\n                                  <li key={index}>{username}</li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"messages-container\">\r\n                            <div className=\"messages\">  \r\n                              {messenger && messages && groupMessages(messages).map((group, groupIndex) => (\r\n                                <div key={groupIndex} className=\"message-group\">\r\n                                  <img     \r\n                                    src={group.profilePhoto || defaultProfilePicture} \r\n                                    alt={`${group.username}'s profile`} \r\n                                    className=\"profile-pic\"\r\n                                  />\r\n                                  <div className=\"message-content\">\r\n                                    <div className=\"message-header\">\r\n                                      <Link to={`/profile/${group.username}`} className=\"username\">{group.username}</Link>\r\n                                    </div>\r\n                                    {group.messages.map((message, messageIndex) => (\r\n                                      <div key={messageIndex} className={`message ${checkForMention(message.content) ? 'mention' : ''}`}>\r\n                                        <span className=\"message-text\">\r\n                                          {message.content}\r\n                                        </span>\r\n                                        <span className=\"timestamp\">{formatTimestamp(message.timestamp)}</span>\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                </div>\r\n                              ))} \r\n                              <div ref={messagesEndRef} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"terminal-footer\">\r\n                            <form onSubmit={handleAddMessage} className=\"message-form\">\r\n                            <span className=\"prompt\">&gt;</span>\r\n                            <input \r\n                              type=\"text\"\r\n                              value={newMessage}\r\n                              onChange={(e) => setNewMessage(e.target.value)}\r\n                              placeholder=\"Type your message...\"\r\n                              maxLength={MAX_CHARACTERS}\r\n                              disabled={isSending || !isConnected}\r\n                              required\r\n                            />\r\n                            <button type=\"submit\" disabled={isSending || !isConnected}>\r\n                              {isSending ? 'Sending...' : 'SEND'}\r\n                            </button>\r\n                            </form>\r\n                            <div className=\"character-count\">\r\n                                {newMessage.length}/{MAX_CHARACTERS}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {showDeleteConfirm && (\r\n                    <div className=\"confirm-delete\">\r\n                        <p>Are you sure you want to delete this messenger?</p>\r\n                        <button onClick={handleDeleteConfirm}>Yes, delete</button>\r\n                        <button onClick={handleDeleteCancel}>Cancel</button>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MessengerDetails;    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}