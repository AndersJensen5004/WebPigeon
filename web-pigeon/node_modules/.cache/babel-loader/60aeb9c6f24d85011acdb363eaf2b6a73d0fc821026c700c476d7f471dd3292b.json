{"ast":null,"code":"import io from 'socket.io-client';\nimport config from './config';\nlet socket = null;\nexport const initializeSocket = userId => {\n  if (!socket) {\n    socket = io(config.apiBaseUrl, {\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      query: {\n        userId\n      }\n    });\n    socket.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.IO server');\n    });\n  }\n  return socket;\n};\nexport const joinMessenger = messengerId => {\n  if (socket) {\n    socket.emit('join', {\n      messenger_id: messengerId\n    });\n  }\n};\nexport const leaveMessenger = messengerId => {\n  if (socket) {\n    socket.emit('leave', {\n      messenger_id: messengerId\n    });\n  }\n};\nexport const sendMessage = (messengerId, content) => {\n  if (socket) {\n    socket.emit('new_message', {\n      messenger_id: messengerId,\n      content: content\n    });\n  }\n};\nexport const closeSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};","map":{"version":3,"names":["io","config","socket","initializeSocket","userId","apiBaseUrl","transports","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","query","on","console","log","joinMessenger","messengerId","emit","messenger_id","leaveMessenger","sendMessage","content","closeSocket","disconnect"],"sources":["C:/Users/jense/Desktop/WebPigeon/web-pigeon/src/socketManager.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport config from './config';\r\n\r\nlet socket = null;\r\n\r\nexport const initializeSocket = (userId) => {\r\n  if (!socket) {\r\n    socket = io(config.apiBaseUrl, {\r\n      transports: ['websocket', 'polling'],\r\n      reconnection: true,\r\n      reconnectionAttempts: Infinity,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      query: { userId }\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from Socket.IO server');\r\n    });\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\nexport const joinMessenger = (messengerId) => {\r\n  if (socket) {\r\n    socket.emit('join', { messenger_id: messengerId });\r\n  }\r\n};\r\n\r\nexport const leaveMessenger = (messengerId) => {\r\n  if (socket) {\r\n    socket.emit('leave', { messenger_id: messengerId });\r\n  }\r\n};\r\n\r\nexport const sendMessage = (messengerId, content) => {\r\n  if (socket) {\r\n    socket.emit('new_message', {\r\n      messenger_id: messengerId,\r\n      content: content\r\n    });\r\n  }\r\n};\r\n\r\nexport const closeSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,UAAU;AAE7B,IAAIC,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EAC1C,IAAI,CAACF,MAAM,EAAE;IACXA,MAAM,GAAGF,EAAE,CAACC,MAAM,CAACI,UAAU,EAAE;MAC7BC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAEC,QAAQ;MAC9BC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE,IAAI;MAC1BC,KAAK,EAAE;QAAER;MAAO;IAClB,CAAC,CAAC;IAEFF,MAAM,CAACW,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;IAEFb,MAAM,CAACW,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC,CAAC;EACJ;EAEA,OAAOb,MAAM;AACf,CAAC;AAED,OAAO,MAAMc,aAAa,GAAIC,WAAW,IAAK;EAC5C,IAAIf,MAAM,EAAE;IACVA,MAAM,CAACgB,IAAI,CAAC,MAAM,EAAE;MAAEC,YAAY,EAAEF;IAAY,CAAC,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAIH,WAAW,IAAK;EAC7C,IAAIf,MAAM,EAAE;IACVA,MAAM,CAACgB,IAAI,CAAC,OAAO,EAAE;MAAEC,YAAY,EAAEF;IAAY,CAAC,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACJ,WAAW,EAAEK,OAAO,KAAK;EACnD,IAAIpB,MAAM,EAAE;IACVA,MAAM,CAACgB,IAAI,CAAC,aAAa,EAAE;MACzBC,YAAY,EAAEF,WAAW;MACzBK,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,IAAIrB,MAAM,EAAE;IACVA,MAAM,CAACsB,UAAU,CAAC,CAAC;IACnBtB,MAAM,GAAG,IAAI;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}