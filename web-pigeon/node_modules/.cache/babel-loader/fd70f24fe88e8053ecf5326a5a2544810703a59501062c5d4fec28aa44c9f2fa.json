{"ast":null,"code":"import io from 'socket.io-client';\nimport config from './config';\nconst sockets = {};\nexport const getSocket = messengerId => {\n  if (!sockets[messengerId]) {\n    sockets[messengerId] = io(config.apiBaseUrl, {\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      query: {\n        messengerId\n      }\n    });\n    sockets[messengerId].on('connect', () => {\n      console.log(`Connected to Socket.IO server for messenger ${messengerId}`);\n      sockets[messengerId].emit('join', {\n        messenger_id: messengerId\n      });\n    });\n    sockets[messengerId].on('disconnect', () => {\n      console.log(`Disconnected from Socket.IO server for messenger ${messengerId}`);\n    });\n  }\n  return sockets[messengerId];\n};\nexport const closeSocket = messengerId => {\n  if (sockets[messengerId]) {\n    sockets[messengerId].disconnect();\n    delete sockets[messengerId];\n  }\n};","map":{"version":3,"names":["io","config","sockets","getSocket","messengerId","apiBaseUrl","transports","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","query","on","console","log","emit","messenger_id","closeSocket","disconnect"],"sources":["C:/Users/jense/Desktop/WebPigeon/web-pigeon/src/socketManager.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport config from './config';\r\n\r\nconst sockets = {};\r\n\r\nexport const getSocket = (messengerId) => {\r\n  if (!sockets[messengerId]) {\r\n    sockets[messengerId] = io(config.apiBaseUrl, {\r\n      transports: ['websocket', 'polling'],\r\n      reconnection: true,\r\n      reconnectionAttempts: Infinity,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      query: { messengerId }\r\n    });\r\n\r\n    sockets[messengerId].on('connect', () => {\r\n      console.log(`Connected to Socket.IO server for messenger ${messengerId}`);\r\n      sockets[messengerId].emit('join', { messenger_id: messengerId });\r\n    });\r\n\r\n    sockets[messengerId].on('disconnect', () => {\r\n      console.log(`Disconnected from Socket.IO server for messenger ${messengerId}`);\r\n    });\r\n  }\r\n\r\n  return sockets[messengerId];\r\n};\r\n\r\nexport const closeSocket = (messengerId) => {\r\n  if (sockets[messengerId]) {\r\n    sockets[messengerId].disconnect();\r\n    delete sockets[messengerId];\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,OAAO,GAAG,CAAC,CAAC;AAElB,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK;EACxC,IAAI,CAACF,OAAO,CAACE,WAAW,CAAC,EAAE;IACzBF,OAAO,CAACE,WAAW,CAAC,GAAGJ,EAAE,CAACC,MAAM,CAACI,UAAU,EAAE;MAC3CC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAEC,QAAQ;MAC9BC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE,IAAI;MAC1BC,KAAK,EAAE;QAAER;MAAY;IACvB,CAAC,CAAC;IAEFF,OAAO,CAACE,WAAW,CAAC,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;MACvCC,OAAO,CAACC,GAAG,CAAC,+CAA+CX,WAAW,EAAE,CAAC;MACzEF,OAAO,CAACE,WAAW,CAAC,CAACY,IAAI,CAAC,MAAM,EAAE;QAAEC,YAAY,EAAEb;MAAY,CAAC,CAAC;IAClE,CAAC,CAAC;IAEFF,OAAO,CAACE,WAAW,CAAC,CAACS,EAAE,CAAC,YAAY,EAAE,MAAM;MAC1CC,OAAO,CAACC,GAAG,CAAC,oDAAoDX,WAAW,EAAE,CAAC;IAChF,CAAC,CAAC;EACJ;EAEA,OAAOF,OAAO,CAACE,WAAW,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMc,WAAW,GAAId,WAAW,IAAK;EAC1C,IAAIF,OAAO,CAACE,WAAW,CAAC,EAAE;IACxBF,OAAO,CAACE,WAAW,CAAC,CAACe,UAAU,CAAC,CAAC;IACjC,OAAOjB,OAAO,CAACE,WAAW,CAAC;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}